[{"/Users/User/Desktop/SEI1019/unit_3/deliverable/react-ajax-swapi/starwars/src/index.js":"1","/Users/User/Desktop/SEI1019/unit_3/deliverable/react-ajax-swapi/starwars/src/reportWebVitals.js":"2","/Users/User/Desktop/SEI1019/unit_3/deliverable/react-ajax-swapi/starwars/src/App.js":"3","/Users/User/Desktop/SEI1019/unit_3/deliverable/react-ajax-swapi/starwars/src/Components/StarshipResults.js":"4","/Users/User/Desktop/SEI1019/unit_3/deliverable/react-ajax-swapi/starwars/src/Components/Starship.js":"5","/Users/User/Desktop/SEI1019/unit_3/deliverable/react-ajax-swapi/starwars/src/Components/Header.js":"6"},{"size":500,"mtime":1607742059000,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1607742060000,"results":"9","hashOfConfig":"8"},{"size":1339,"mtime":1607870732000,"results":"10","hashOfConfig":"8"},{"size":449,"mtime":1607871602000,"results":"11","hashOfConfig":"8"},{"size":331,"mtime":1607871390000,"results":"12","hashOfConfig":"8"},{"size":144,"mtime":1607870673000,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"8et34o",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/User/Desktop/SEI1019/unit_3/deliverable/react-ajax-swapi/starwars/src/index.js",[],["28","29"],"/Users/User/Desktop/SEI1019/unit_3/deliverable/react-ajax-swapi/starwars/src/reportWebVitals.js",[],"/Users/User/Desktop/SEI1019/unit_3/deliverable/react-ajax-swapi/starwars/src/App.js",["30"],"import React, { useEffect, useRef} from 'react'\nimport { useState} from 'react';\nimport axios from 'axios';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport './App.css';\nimport Starship from './Components/Starship'\nimport StarshipResults from './Components/StarshipResults';\nimport Header from './Components/Header.js'\n\n\nlet count = 0;\nfunction App() {\n  // const [starshipArray, setStarshipArray] = useState([]);\n \n  let url ='https://swapi.dev/api/starships';\n  const [starshipArray, setStarshipArray] = useState([]);\n \n  useEffect(()=>{\n    count = count+1;\n    if(count === 1){\n      axios.get(url)\n      .then(result => {\n        console.log('!requestmade!')\n        setStarshipArray(result.data.results)\n        console.log('!!!!!!!!!!$$$$$$$'+ starshipArray)\n      }).catch((err)=>{console.log(err)})\n      \n  }}) \n        \n        \n  \n      \n\n \n \n  return (\n    <BrowserRouter>\n    <div className=\"App\">\n    <Header /> \n    <Route path=\"/\" exact render={()=>{return <StarshipResults starShipList={starshipArray}/>}} />\n    <Route path=\"/Starship/:name\" render={(routeInfo)=>{\n      const name= routeInfo.match.params.name\n      const targetStarships= starshipArray.find((p)=>p.name ===name)\n      return <Starship starShipList={targetStarships}/>\n    }}/>\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/Users/User/Desktop/SEI1019/unit_3/deliverable/react-ajax-swapi/starwars/src/Components/StarshipResults.js",[],"/Users/User/Desktop/SEI1019/unit_3/deliverable/react-ajax-swapi/starwars/src/Components/Starship.js",[],"/Users/User/Desktop/SEI1019/unit_3/deliverable/react-ajax-swapi/starwars/src/Components/Header.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":1,"column":28,"nodeType":"37","messageId":"38","endLine":1,"endColumn":34},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]